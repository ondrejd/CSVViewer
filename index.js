/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

var { Cc, Ci, Cu } = require('chrome');
var self = require('sdk/self');
var { ToggleButton } = require('sdk/ui/button/toggle');
var panels = require("sdk/panel");
var tabs = require('sdk/tabs');

Cu.import('resource://gre/modules/Services.jsm');

var addonId = require("./package.json").id;
var homepageUrl = require("./package.json").homepage;

// CsvViewer's toolbar button
var gToolbarButton = ToggleButton({
	id: 'csvviewer-toolbarbutton',
	label: 'CsvViewer',
	icon: {
		'16': './icon-16.png',
		'32': './icon-32.png',
		'64': './icon-64.png',
	},
	onChange: handleToolbarButtonChange
});

// CsvViewer's panel for toolbar button
var gToolbarPanel = panels.Panel({
//	width: 200,
//	height: 300,
	contentURL: './toolbarpanel.html',
//	contentScriptFile: './toolbarpanel.js',
//	contentStyleFile: './toolbarpanel.css',
	onHide: handleToolbarPanelHide
});

/**
 * Handles toolbar button click action.
 * @param {Object} aState
 * @returns {void}
 */
function handleToolbarButtonChange(aState) {
	console.log(aState);
	if (aState.checked) {
		gToolbarPanel.show({
			position: gToolbarButton
		});
	}
} // end handleToolbarButtonChange(aState)

/**
 * Handles toolbar panel hide action.
 * @returns {void}
 */
function handleToolbarPanelHide() {
	gToolbarButton.state('window', { checked: false });
} // end handleToolbarPanelHide()

// Pass panel show event to the panel self.
gToolbarPanel.on('show', function () {
	gToolbarPanel.port.emit('show');
});

// Pass panel hide event to the panel self.
gToolbarPanel.on('hide', function () {
	gToolbarPanel.port.emit('hide');
});

// Handle new CSV file command.
gToolbarPanel.port.on('newFileCmd', function () {
	console.log('XXX `newFileCmd`!');
	gToolbarPanel.hide();
});

// Handle open CSV file command.
gToolbarPanel.port.on('openFileCmd', function () {
	console.log('XXX `openFileCmd`!');
	gToolbarPanel.hide();
});

// Handle show preferences command.
gToolbarPanel.port.on('preferencesCmd', function () {
	gToolbarPanel.hide();
	Services.wm.getMostRecentWindow('navigator:browser').BrowserOpenAddonsMgr(
		'addons://detail/' + addonId + '/preferences'
	);
});

// Handle homepage command.
gToolbarPanel.port.on('homepageCmd', function () {
	// Hide toolbar panel
	gToolbarPanel.hide();
	// Check if homepage is already opened - if yes bring it to the foreground.
	for (let tab of tabs) {
		// We don't check exact match just the main URL
		if (tab.url.indexOf(homepageUrl) != -1) {
			tab.activate();
			return;
		}
	}
	// Homepage is not opened yet - open it
	tabs.open(homepageUrl);
});

// ###### Generated by JPM:
// a dummy function, to show how tests work.
// to see how to test this function, look at test/test-index.js
//function dummy(text, callback) {
//	callback(text);
//}
//
//exports.dummy = dummy;
